---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres-vector
spec:
  postgresVersion: 16

  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: postgres

    annotations:
      crunchy-users.ramblurr.github.com/extensions: |
        [
          {
            "database": "immich_db",
            "extension": "vectors"
          },
          {
            "database": "immich_db",
            "extension": "earthdistance",
            "cascade": true
          }
        ]

  ## use dragon's image, I should probably bake my own one at some point.
  image: ghcr.io/drag0n141/cdpgvector:0.3.0@sha256:6bd40ba06b7da1885fbabb66b8b672fea865e6dce7f5c1a1195b4b97a75b43eb

  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        max_wal_size: 5GB
        synchronous_commit: "on"
        pg_hba:
          - hostssl all all all md5
        parameters:
          max_connections: 500
  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-vector
      replicas: &replica 2
      dataVolumeClaimSpec:
        storageClassName: longhorn
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 80Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: postgres

  users:
    # Superuser
    - name: postgres
      databases: ["postgres"]
      options: SUPERUSER
      password: &password
        type: AlphaNumeric
    # Applications
    - name: immich
      databases: ["immich_db"]
      options: SUPERUSER
      password: *password

  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M

  proxy:
    pgBouncer:
      port: 5432
      service:
        metadata:
          annotations:
            lbipam.cilium.io/ips: 192.168.1.157
        type: LoadBalancer
      replicas: *replica
      config:
        global:
          pool_mode: session # Grafana requires session https://github.com/grafana/grafana/issues/74260#issuecomment-1702795311. Everything else is happy with transaction
          client_tls_sslmode: prefer
          default_pool_size: "100"
          max_client_conn: "500"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: pgbouncer
