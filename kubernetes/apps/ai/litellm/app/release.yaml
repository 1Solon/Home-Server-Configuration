---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app litellm
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      litellm:
        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: litellm-secret, litellm-db-secret
        containers:
          app:
            image:
              repository: ghcr.io/berriai/litellm
              tag: v1.77.3-stable@sha256:13627afb7b0dd049ce7a7d724c05264fa0acbca1b8e32e85c6241b22c46921be
            env:
              TZ: ${TZ}
              REDIS_URL: redis://dragonfly.databases.svc.cluster.local
              STORE_MODEL_IN_DB: True

            envFrom:
              - secretRef:
                  name: litellm-secret
              - secretRef:
                  name: litellm-db-secret

            args:
              - --port
              - "4000"
              - --config
              - /app/config.yaml

            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/liveliness
                    port: &port 4000
                  initialDelaySeconds: 30
                  periodSeconds: 60
                  timeoutSeconds: 10
                  failureThreshold: 3

              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/readiness
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  timeoutSeconds: 5
                  failureThreshold: 3

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi

    defaultPodOptions:
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: *app
        ports:
          http:
            primary: true
            port: *port

    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Litellm
          gethomepage.dev/description: Proxy and Budgeting for LLM providers
          gethomepage.dev/group: Applications
          gethomepage.dev/icon: https://cdn.jsdelivr.net/gh/selfhst/icons/png/litellm.png
          gethomepage.dev/pod-selector: app.kubernetes.io/name=litellm
        hosts:
          - host: "{{ .Release.Name }}.${LOCAL_DOMAIN}"
            paths: &paths
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *app

    persistence:
      config:
        type: configMap
        name: litellm-configmap
        globalMounts:
          - path: /app/config.yaml
            subPath: config.yaml
            readOnly: true

      cache:
        type: emptyDir
        globalMounts:
          - path: /.cache
            subPath: cache
          - path: /.npm
            subPath: npm
          - path: /tmp
            subPath: tmp
