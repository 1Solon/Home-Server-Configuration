---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres-vector
  labels:
    crunchy-users.ramblurr.github.com/watch: "true"
  annotations:
    crunchy-users.ramblurr.github.com/superuser: "postgres"
    crunchy-users.ramblurr.github.com/extensions: |
      [
        {
          "database": "immich_db",
          "extension": "vchord"
        },
        {
          "database": "immich_db",
          "extension": "earthdistance",
          "cascade": true
        }
      ]
spec:
  postgresVersion: 17
  shutdown: true # shutdown the cluster before upgrade, otherwise it will fail with "cannot be upgraded while running"

  ## use dragon's image, I should probably bake my own one at some point.
  image: ghcr.io/zednotdead/cdpgvectorchord:16-0.3.0@sha256:99ffcbc9e887fa4a981f61ff68dcf59bf8bf611f688217ed5f8d0ba07a67eff1

  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        max_wal_size: 5GB
        synchronous_commit: "on"
        pg_hba:
          - hostssl all all all md5
        parameters:
          max_connections: 500
          shared_preload_libraries: "vchord.so"
          search_path: '"$user", public, vectors"'
  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-vector
      replicas: &replica 2
      dataVolumeClaimSpec:
        storageClassName: longhorn
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 80Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: postgres

  users:
    # Superuser
    - name: postgres
      databases: ["postgres"]
      options: SUPERUSER
      password: &password
        type: AlphaNumeric
    # Applications
    - name: immich
      databases: ["immich_db"]
      options: SUPERUSER
      password: *password

  backups:
    pgbackrest:
      configuration:
        - secret:
            name: crunchy-postgres-secret
      global:
        compress-type: bz2
        compress-level: "9"
        # Minio
        repo1-block: y
        repo1-bundle: y
        repo1-path: /postgres-vector-cluster
        repo1-retention-full: "7" # days
        repo1-retention-differential: "7" # days
        repo1-retention-incremental: "7" # days
        repo1-retention-full-type: time
        repo1-s3-uri-style: path
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        - name: repo1 # Minio
          s3: &minio
            bucket: postgres
            endpoint: "s3.${LOCAL_DOMAIN}"
            region: home
          schedules:
            full: 0 1 * * 0 # Sunday at 01:00
            differential: 0 1 * * 1-6 # Mon-Sat at 01:00
            incremental: 0 2-23 * * * # Every hour except 01:00

  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M

  proxy:
    pgBouncer:
      port: 5432
      service:
        metadata:
          annotations:
            lbipam.cilium.io/ips: 192.168.1.157
        type: LoadBalancer
      replicas: *replica
      config:
        global:
          pool_mode: session # Grafana requires session https://github.com/grafana/grafana/issues/74260#issuecomment-1702795311. Everything else is happy with transaction
          client_tls_sslmode: prefer
          default_pool_size: "100"
          max_client_conn: "500"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: pgbouncer
