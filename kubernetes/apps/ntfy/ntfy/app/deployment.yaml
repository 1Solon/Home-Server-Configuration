apiVersion: apps/v1
kind: Deployment
metadata:
  name: ntfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ntfy
  template:
    metadata:
      labels:
        app: ntfy
    spec:
      containers:
        - name: ntfy
          image: binwiederhier/ntfy:v2.13.0@sha256:cd107fa9ecca863b99e5cdd335bf27b0584cc54d170f1d0939253f314e0fdd4d
          resources: {}
          imagePullPolicy: Always
          command: ["ntfy", "serve"]
          envFrom:
            - configMapRef:
                name: ntfy-server-config
          ports:
            - containerPort: 80
          volumeMounts:
            - name: user-db
              mountPath: "/var/lib/ntfy"
          initContainers:
            - name: init-user-db
              image: binwiederhier/ntfy:v2.13.0@sha256:cd107fa9ecca863b99e5cdd335bf27b0584cc54d170f1d0939253f314e0fdd4d
              imagePullPolicy: Always
              command: ["/bin/sh", "-c"]
              args:
                - |
                  ntfy serve &
                  if [ $? -eq 0 ]; then
                    while true; do sleep 3 && test -f $NTFY_AUTH_FILE && break; done
                    ntfy user add --role=admin $NTFY_USERNAME
                    pkill -TERM ntfy
                  else
                    exit $?
                  fi
              envFrom:
                - configMapRef:
                    name: ntfy-server-config
                - secretRef:
                    name: ntfy-user-config
              volumeMounts:
                - mountPath: /var/lib/ntfy/
                  name: user-db
      volumes:
        - name: user-db
          persistentVolumeClaim:
            claimName: ntfy-pvc
